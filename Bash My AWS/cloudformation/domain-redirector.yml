AWSTemplateFormatVersion: '2010-09-09'

Parameters:

  DestinationHostName:
    Type: String
    Default: bash-my-aws.org

  DestinationProtocol:
    Type: String
    Default: https

  SourceHostName:
    Type: String
    Default: bashmyaws.com

Mappings:
  RegionMap:
    us-east-1:
      S3hostedzoneID: Z3AQBSTGFYJSTF
      websiteendpoint: s3-website-us-east-1.amazonaws.com
    us-west-1:
      S3hostedzoneID: Z2F56UZL2M1ACD
      websiteendpoint: s3-website-us-west-1.amazonaws.com
    us-west-2:
      S3hostedzoneID: Z3BJ6K6RIION7M
      websiteendpoint: s3-website-us-west-2.amazonaws.com
    eu-west-1:
      S3hostedzoneID: Z1BKCTXD74EZPE
      websiteendpoint: s3-website-eu-west-1.amazonaws.com
    ap-southeast-1:
      S3hostedzoneID: Z3O0J2DXBE1FTB
      websiteendpoint: s3-website-ap-southeast-1.amazonaws.com
    ap-southeast-2:
      S3hostedzoneID: Z1WCIGYICN2BYD
      websiteendpoint: s3-website-ap-southeast-2.amazonaws.com
    ap-northeast-1:
      S3hostedzoneID: Z2M4EHUR26P7ZW
      websiteendpoint: s3-website-ap-northeast-1.amazonaws.com
    sa-east-1:
      S3hostedzoneID: Z31GFT0UA1I2HV
      websiteendpoint: s3-website-sa-east-1.amazonaws.com


Resources:

  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: LogDeliveryWrite
      BucketName: !Ref SourceHostName
      LoggingConfiguration:
        DestinationBucketName: !Ref SourceHostName
      # MetricsConfigurations:
      #  - MetricsConfiguration
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      WebsiteConfiguration:
        RedirectAllRequestsTo:
          HostName: !Ref DestinationHostName
          Protocol: !Ref DestinationProtocol

  Route53RecordSet:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneName: !Sub "${SourceHostName}."
      Comment: Web Redirector
      Name: !Ref SourceHostName
      Type: A
      AliasTarget:
        HostedZoneId: !FindInMap [ RegionMap, !Ref 'AWS::Region', S3hostedzoneID]
        DNSName: !FindInMap [ RegionMap, !Ref 'AWS::Region', websiteendpoint]


Outputs:
  S3WebsiteURL:
    Description: WebsiteURL
    Value: !GetAtt S3Bucket.WebsiteURL
  SourceURL:
    Description: Address we're redirecting from
    Value: !Sub "http://${SourceHostName}"
  DestinationURL:
    Description: Address we're redirecting to
    Value: !Sub "${DestinationProtocol}://${DestinationHostName}/"
